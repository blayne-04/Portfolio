---
import bannerImage from '../../public/banner.png';

const { class: className = '' } = Astro.props;
---
<section
  aria-hidden="true"
  class={`background ${className}`.trim()}
  x-data="{
    scrollY: 0,
    maxShift: 0,
    displayHeight: null,
    updateFromScroll() {
      this.scrollY = window.scrollY;
    },
    computeShift() {
      const container = this.$refs.container;
      const img = this.$refs.image;
      if (!container || !img) return;
      const { naturalWidth, naturalHeight } = img;
      if (!naturalWidth || !naturalHeight) return;
      const scale = Math.max(
        container.offsetWidth / naturalWidth,
        container.offsetHeight / naturalHeight
      );
      const displayHeight = naturalHeight * scale;
      this.displayHeight = displayHeight;
      this.maxShift = Math.max(0, displayHeight - container.offsetHeight);
    },
    parallaxStyle() {
      const offset = Math.min(this.maxShift, this.scrollY * 0.3);
      return {
        transform: `translateY(-${offset}px)`,
        height: this.displayHeight ? `${this.displayHeight}px` : undefined,
      };
    },
  }"
  x-init="updateFromScroll(); computeShift()"
  @scroll.window="updateFromScroll()"
  @resize.window="computeShift()"
>
  <div class="background__inner" x-ref="container">
    <img
      x-ref="image"
      src={bannerImage.src}
      width={bannerImage.width}
      height={bannerImage.height}
      alt="Mountain skyline"
      class="background__image"
      x-bind:style="parallaxStyle()"
      @load="computeShift()"
    />
    <div class="background__overlay"></div>
  </div>
</section>

<style>
  .background {
    position: absolute;
    inset: 0;
    z-index: 0;
    overflow: hidden;
  }

  .background__inner {
    position: relative;
    width: 100%;
    height: 100%;
    min-height: 100vh;
    overflow: hidden;
    background: #0f1729;
  }

  .background__image {
    position: absolute;
    inset: 0;
    width: 100%;
    object-fit: cover;
    object-position: top;
    transition: transform 150ms ease-out;
    will-change: transform;
  }

  .background__overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(
        180deg,
        rgba(0, 0, 0, 0.65) 0%,
        rgba(15, 23, 41, 0.85) 40%,
        rgba(15, 23, 41, 0.94) 100%
      );
  }
</style>